services:
  nginx:
    container_name: chirrio_nginx
    build: ./nginx
    ports:
      - "8081:80"
      - "443:443"
    volumes:
      - static_volume:/home/app/webapp/static
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - web
    restart: "on-failure"
    networks:
      - server_net
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
  web:
    container_name: chirrio_server
    volumes:
      - .:/chirrio_server
      - static_volume:/home/app/webapp/static
    depends_on:
      - db
    build: .
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py initadmin &&
      gunicorn chirrio_server.wsgi:application --bind 0.0.0.0:8000"
    image: chirrio_image
    expose:
      - 8000
    networks:
      - server_net

  db:
    container_name: chirrio_db
    image: postgres:14.5-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - ${DB_PORT}
    networks:
      - server_net

  adminer:
    container_name: chirrio_adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  pgdata:
  static_volume:
  redis:

networks:
  server_net: